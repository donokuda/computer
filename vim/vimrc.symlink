" Load Vundle
if filereadable(expand("~/.donfiles/vim/vundle.vim"))
  source ~/.donfiles/vim/vundle.vim
endif

let g:instant_markdown_slow = 1
filetype plugin on

" For Powerline
set nocompatible   " Disable vi-compatibility
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs
let g:Powerline_symbols  = 'fancy' " fancy icons

" turn on search highlighting
set hlsearch
syntax on

" set terminal colors to 256
set t_Co=256
" If running in GUI mode (ie, MacVim or gVim), then use Dusk for color theme.
" If not, then fall back to molokai.
if has("gui_running")
  " XCODE?
  colorscheme Dusk
else
  " OR SUBLIME?
  colorscheme molokai
endif

" turn on line numbers
set number

set tabstop=2
set shiftwidth=2
set expandtab
set ruler " show line and column numbers
set backspace=indent,eol,start " be able to delete invisible stuff

set smartindent
set autoindent
filetype indent on

" Syntax highlighting for specific files
au! BufNewFile,BufRead Rakefile,Guardfile,*.mirah,*.ru set filetype=ruby
au! BufNewFile,BufRead *.md set filetype=markdown
au! BufNewFile,BufRead *.rg set filetype=clojure

" map :W and :Q to its lowercase equivalent
command W w
command Q q

" Trailing whitespace
highlight TrailingWhitespace ctermbg=red guibg=red
autocmd WinEnter * match TrailingWhitespace /\s\+$/

" Rainbow Parentheses ++++++++++++++++++
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]

let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0

au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
" ++++++++++++++++++++++++++++++++++++++++

"" Leader Mappings """"""""""""""
let mapleader = ","
nnoremap <leader>r :call ToggleRelativeLineNumbers()<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
" Grab contents from line and paste above/below cursor
nnoremap <leader>b yy2Pi-webkit-jI-moz-j
" Grab contents from line and paste above/below cursor
nnoremap <leader>p Gyyp
nnoremap <leader>P GyyP

nnoremap <leader>ws :%s/\s\+$//e<cr>

" Rspec.vim mappings
map <leader>t :call RunCurrentSpecFile()<cr>
map <leader>s :call RunNearestSpec()<cr>
map <leader>l :call RunLastSpec()<cr>

"" Custom Functions """"""""""""""
function! ToggleRelativeLineNumbers()
  if(&relativenumber == 1)
    set number
  else
    set relativenumber
  endif
endfunc
